from .base_encoders import (
    DepthEncoder,
    InstructionEncoder,
    ModelCfg,
    ProgressMonitor,
    RgbEncoder,
    StateEncoder,
)

cma_cfg = ModelCfg(
    policy_name='CMA_Policy',
    max_step=200,
    len_traj_act=4,
    instruction_encoder=InstructionEncoder(
        sensor_uuid='instruction',
        vocab_size=2504,
        use_pretrained_embeddings=True,
        embedding_file='data/datasets/R2R_VLNCE_v1-3_corrected/embeddings.json.gz',
        dataset_vocab='data/datasets/R2R_VLNCE_v1-3_corrected/train/train.json.gz',
        fine_tune_embeddings=False,
        embedding_size=50,
        hidden_size=128,
        rnn_type='LSTM',
        final_state_only=True,
        bidirectional=True,
    ),
    rgb_encoder=RgbEncoder(cnn_type='TorchVisionResNet50', output_size=256, trainable=False),
    depth_encoder=DepthEncoder(
        cnn_type='VlnResnetDepthEncoder',
        output_size=128,
        backbone='resnet50',
        ddppo_checkpoint='data/ddppo-models/gibson-4plus-mp3d-train-val-test-resnet50.pth',
        trainable=False,
    ),
    state_encoder=StateEncoder(
        hidden_size=512,
        rnn_type='GRU',
        num_recurrent_layers=2,
    ),
    progress_monitor=ProgressMonitor(
        use=True,
        alpha=1.0,
    ),
)

cma_eval_cfg = ModelCfg(
    policy_name='CMA_Policy',
    ablate_instruction=False,
    ablate_depth=False,
    ablate_rgb=False,
    normalize_rgb=False,
    instruction_encoder=InstructionEncoder(
        sensor_uuid='instruction',
        vocab_size=2504,
        use_pretrained_embeddings=True,
        embedding_file='data/datasets/R2R_VLNCE_v1-3_corrected/embeddings.json.gz',
        dataset_vocab='data/datasets/R2R_VLNCE_v1-3_corrected/train/train.json.gz',
        fine_tune_embeddings=False,
        embedding_size=50,
        hidden_size=128,
        rnn_type='LSTM',
        final_state_only=True,
        bidirectional=True,
    ),
    rgb_encoder=RgbEncoder(cnn_type='TorchVisionResNet50', output_size=256, trainable=False),
    depth_encoder=DepthEncoder(
        cnn_type='VlnResnetDepthEncoder',
        output_size=128,
        backbone='resnet50',
        ddppo_checkpoint='data/ddppo-models/gibson-4plus-mp3d-train-val-test-resnet50.pth',
        trainable=False,
    ),
    state_encoder=StateEncoder(
        hidden_size=512,
        rnn_type='GRU',
    ),
    progress_monitor=ProgressMonitor(
        use=False,
        alpha=1.0,
    ),
)
